{"version":3,"file":"angular-easy-form.js","sources":["../projects/angular-easy-form/src/lib/config/fields.ts","../projects/angular-easy-form/src/lib/config/config.ts","../../projects/angular-easy-form/src/lib/angular-easy-form.component.ts","../esm2015/projects/angular-easy-form/src/lib/fields/input/input.component.ts","../esm2015/projects/angular-easy-form/src/lib/groupFields/group-fields/group-fields.component.ts","../projects/angular-easy-form/src/lib/inputsearch/inputsearch.component.ts","../../projects/angular-easy-form/src/lib/angular-easy-form.module.ts","../../../projects/angular-easy-form/src/public-api.ts","../../../projects/angular-easy-form/src/angular-easy-form.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { CheckBoxTags } from '../interfaces/CheckBoxTags';\r\nimport { DateTags } from '../interfaces/DateTags';\r\nimport { NumberTags } from '../interfaces/NumberTags';\r\nimport { SearchInputTags } from '../interfaces/SearchInputTags';\r\nimport { SelectTags } from '../interfaces/Select';\r\nimport { TextAreaTags } from '../interfaces/TexAreaTags';\r\nimport { TextTags } from '../interfaces/TexTags';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Fields {\r\n  allFields: any = [];\r\n\r\n  text(settings: TextTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  number(settings: NumberTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  textArea(settings: TextAreaTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  date(settings: DateTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  select(settings: SelectTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  checkbox(settings: CheckBoxTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  searchInput(settings: SearchInputTags) {\r\n    this.allFields.push(settings);\r\n  }\r\n\r\n  getFields() {\r\n    return this.allFields;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Fields } from './fields';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class Config {\r\n  styleGlobal: any;\r\n  config: any;\r\n  fieldsClass;\r\n  fieldsBuilded: Array<any> = [];\r\n  matriz!: Array<number>;\r\n  fieldsIteration!: Array<any>;\r\n\r\n  constructor(public fields: Fields) {\r\n    this.fieldsClass = fields;\r\n    this.config = {\r\n      style: this.styleGlobal\r\n    };\r\n  }\r\n\r\n  generateMatriz() {\r\n    this.decreaseFields();\r\n    this.matriz.map(numb => {\r\n      this.fieldsBuilded.push(this.buildingFields(numb));\r\n      this.fieldsIteration = this.fieldsIteration.slice(numb, this.fieldsIteration.length);\r\n    });\r\n  }\r\n\r\n  decreaseFields() {\r\n    return this.fieldsIteration = [...this.fieldsClass.getFields()];\r\n  }\r\n\r\n  buildingFields(quantityOfFields: number) {\r\n    const fieldsBuild: Array<any> = [];\r\n    const allFields = this.fieldsIteration;\r\n    for (let index = 0; index < allFields.length;) {\r\n      if (quantityOfFields > index) {\r\n        fieldsBuild.push(allFields[index]);\r\n      }\r\n      index++;\r\n    }\r\n    return fieldsBuild;\r\n  }\r\n\r\n  field() {\r\n    return this.fieldsClass;\r\n  }\r\n\r\n  build() {\r\n    this.generateMatriz();\r\n    return this.fieldsBuilded || this.fieldsClass.getFields();\r\n  }\r\n}\r\n","import { Output } from '@angular/core';\nimport { Component, EventEmitter, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Config } from './config/config';\nimport { Fields } from './config/fields';\nimport { FormOptions } from './interfaces/FormOptions';\n\n\n@Component({\n  selector: 'lib-angular-easy-form',\n  templateUrl: './angular-easy-form.component.html',\n  styles: ['./angular-easy-form.component.css']\n})\nexport class AngularEasyFormComponent implements OnInit {\n  @Output() eventsForm = new EventEmitter();\n  @Input() setFieldsConfig: any;\n  setConfig: any;\n  allFields: any = {};\n  valueEvent: any = {};\n  otherEvents: any = {};\n  masterConfig: any = { };\n  showGroups = false;\n\n  constructor(private themConfig: Config) {\n\n  }\n\n  // tslint:disable-next-line: typedef\n  ngOnInit() {\n    this.populateGroup();\n  }\n\n  formOptions(): Config {\n    return this.themConfig;\n  }\n\n  // tslint:disable-next-line: typedef\n  eventGroupFields(event: any) {\n    this.agregateResult(event);\n    this.valueEvent = {\n      otherEvents: this.allFields,\n      values: Object.assign(this.otherEvents, event[Object.keys(event)[0].toString()][0])\n    };\n    this.eventsForm.emit(this.valueEvent);\n  }\n\n  agregateResult(event: any) {\n    this.allFields = Object.assign(this.allFields, event);\n  }\n\n  populateGroup() {\n    this.masterConfig.fields = this.setFieldsConfig;\n    this.showGroups = this.setFieldsConfig ? true : false;\n  }\n\n}\n\nexport const options = new AngularEasyFormComponent(new Config(new Fields()));\n\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ConfigInput } from '../../interfaces/ConfigInput';\n\n\n@Component({\n  selector: 'lib-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input() configInput!: ConfigInput;\n\n  @Output() eventInput = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {\n  }\n  inputForm!: FormGroup;\n\n  ngOnInit(): void {\n    this.initiFb();\n    this.getFormChanges();\n  }\n\n  initiFb() {\n    const setControlName: any = {};\n    setControlName[this.configInput.alias.toString()] = [{value: this.configInput.value || '',\n     disabled: this.configInput.disable || false}];\n    this.inputForm = this.fb.group(setControlName);\n    this.eventInput.emit(this.inputForm);\n  }\n\n  getFormChanges() {\n    this.inputForm.valueChanges.subscribe(() => {\n      this.eventInput.emit(this.inputForm);\n    });\n  }\n\n  eventValue(event: any) {\n    this.eventInput.emit({ alias: this.configInput.alias, type: 'searchForm', value: event });\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-group-fields',\n  templateUrl: './group-fields.component.html',\n  styleUrls: ['./group-fields.component.css']\n})\nexport class GroupFieldsComponent implements OnInit {\n  @Input() configGroup: any;\n  @Output() eventGroupInput = new EventEmitter();\n  fieldsGroup: any = {};\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  eventFields(event: any) {\n    if (event.type === 'searchForm') {\n      this.fieldsGroup[event.alias] = {value: event.value, isValid: event.valid };\n      this.eventGroupInput.emit(this.fieldsGroup);\n    } else {\n      this.fieldsGroup[Object.keys(event.value)[0] || Object.keys(event)[0]] = [ event.value, event.valid, event ];\n      this.eventGroupInput.emit(this.fieldsGroup);\n    }\n  }\n\n}\n","import {\n    Component, OnInit, Input,\n    ViewEncapsulation,\n    Output, EventEmitter,\n    ViewChild, ElementRef, ChangeDetectionStrategy, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-inputsearch',\n    templateUrl: './inputsearch.component.html',\n    styleUrls: ['./inputsearch.component.scss'],\n    encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class InputsearchComponent implements OnInit, OnChanges {\n    @ViewChild('selectInp') nameField: ElementRef;\n    @ViewChild(MatAutocompleteTrigger, { static: true }) autoTrigger: MatAutocompleteTrigger;\n    @Input() allData: any = [];\n    @Input() searchDefault: any;\n    @Input() preSelected = '';\n    @Input() preSelectedComparer: any;\n    @Input() label: string;\n    @Input() itemValue: any;\n    @Input() itemResult: any;\n    @Output() sendValue = new EventEmitter();\n    @Output() sendKeyEvent = new EventEmitter();\n    @Input() validate: boolean;\n    @Input() readOnly: boolean;\n    focusField = false;\n    myControl = new FormControl();\n    filteredOptions: Observable<string[]>;\n    allComplete = [];\n    globalTrigger: any;\n    callNumber = 0;\n    callOne = 0;\n    valuSelectedInit: string;\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        this.allComplete = this.allData || [];\n        this.allComplete.map((res: any) => {\n            const str = res[this.itemResult].toLowerCase();\n            if (res[this.preSelectedComparer] === this.preSelected) {\n                this.myControl.setValue(str.toUpperCase());\n                this.filter(this.preSelected);\n                return;\n            }\n        });\n\n        this.myControl.valueChanges.subscribe(value => {\n            if (this.globalTrigger) {\n                this.globalTrigger.openPanel();\n            }\n            if (value === '') {\n                this.sendValue.emit({ id: '', name: this.label });\n            }\n            if (value === '' && this.callNumber === 0) {\n                this.allComplete = this.allData;\n                this.callNumber = 1;\n            }\n            this.filter(value);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.allComplete = changes.allData.currentValue;\n    }\n\n    onKey(event: any) {\n        this.sendKeyEvent.emit({eventSent: event, field: this.myControl});\n    }\n\n    private filter(value: string) {\n        const filterValue = typeof value === 'string' ? value.toLowerCase() : value;\n        const newResult: any = [];\n        this.allData.map((option: any) => {\n            const result = typeof option[this.itemResult] === 'string' ?\n                option[this.itemResult].toLowerCase() : option[this.itemResult];\n            if (result.includes(filterValue)) {\n                this.valuSelectedInit = option.id;\n                newResult.push(option);\n            }\n        });\n        if (newResult.length > 1 && this.callNumber === 0) {\n            setTimeout(() => {\n                this.autoTrigger.openPanel();\n            }, 200);\n            this.callNumber = 1;\n        } else {\n            if (this.label === 'Delivery Address' && this.callOne === 0) {\n                this.selected(this.valuSelectedInit, this.label);\n                this.callOne = 1;\n            }\n        }\n        this.allComplete = newResult;\n\n\n    }\n\n    eventClick($event: any, trigger: any) {\n        this.globalTrigger = trigger;\n        trigger.openPanel();\n    }\n\n    selected(id: any, label: string) {\n        if (!id) {\n            return;\n        }\n        this.sendValue.emit({ id: id, name: this.label });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularEasyFormComponent } from './angular-easy-form.component';\nimport { InputComponent } from './fields/input/input.component';\nimport { GroupFieldsComponent } from './groupFields/group-fields/group-fields.component';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport { InputsearchComponent } from './inputsearch/inputsearch.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\n@NgModule({\n  declarations: [\n    AngularEasyFormComponent,\n     InputComponent, \n     GroupFieldsComponent,\n     InputsearchComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    TextFieldModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatFormFieldModule\n    \n  ],\n  exports: [AngularEasyFormComponent]\n})\nexport class AngularEasyFormModule { }\n\n","/*\n * Public API Surface of angular-easy-form\n */\nexport * from './lib/angular-easy-form.component';\nexport * from './lib/angular-easy-form.module';\nexport * from './lib/interfaces/ThemeConfig';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {Config as ɵa} from './lib/config/config';\nexport {Fields as ɵb} from './lib/config/fields';\nexport {InputComponent as ɵc} from './lib/fields/input/input.component';\nexport {GroupFieldsComponent as ɵd} from './lib/groupFields/group-fields/group-fields.component';\nexport {InputsearchComponent as ɵe} from './lib/inputsearch/inputsearch.component';"],"names":[],"mappings":"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"}