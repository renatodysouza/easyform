{"version":3,"file":"angular-easy-form.js","sources":["../src/lib/angular-easy-form.component.ts","../esm2015/lib/src/lib/fields/input/input.component.ts","../esm2015/lib/src/lib/groupFields/group-fields/group-fields.component.ts","../esm2015/src/lib/inputsearch/inputsearch.component.ts","../src/lib/angular-easy-form.module.ts","../../src/public-api.ts","../../src/angular-easy-form.ts"],"names":[],"mappings":"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","sourcesContent":["import { Output } from '@angular/core';\nimport { Component, EventEmitter, Input, OnInit, SimpleChanges } from '@angular/core';\nimport { Config } from './interfaces/Config';\n\n@Component({\n  selector: 'lib-angular-easy-form',\n  templateUrl: './angular-easy-form.component.html',\n  styles: ['./angular-easy-form.component.css']\n})\nexport class AngularEasyFormComponent implements OnInit {\n  @Input() masterConfig: Config;\n  @Output() eventsForm = new EventEmitter();\n  allFields: any = {};\n  valueEvent: any = {};\n  otherEvents: any = {};\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // this.easyFormService.setConfig(changes.masterConfig.currentValue());\n  }\n\n  eventGroupFields(event: any) {\n    if (!event) { return }\n    this.allFields = Object.assign(this.allFields, event);\n    this.valueEvent = {\n      otherEvents: this.allFields,\n      values: Object.assign(this.otherEvents, event[Object.keys(event)[0].toString()][0])\n    }\n    this.eventsForm.emit(this.valueEvent)\n  }\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ConfigInput } from '../../interfaces/ConfigInput';\n\n\n@Component({\n  selector: 'lib-input',\n  templateUrl: './input.component.html',\n  styleUrls: ['./input.component.css']\n})\nexport class InputComponent implements OnInit {\n  @Input() configInput: ConfigInput\n\n  @Output() eventInput = new EventEmitter();\n\n  constructor(private fb: FormBuilder) {\n  }\n  inputForm!: FormGroup;\n\n  ngOnInit(): void {\n    this.initiFb();\n    this.getFormChanges();\n  }\n\n  initiFb() {\n    const setControlName: any = {}\n    setControlName[this.configInput.alias.toString()] = [this.configInput.value || '']\n    this.inputForm = this.fb.group(setControlName);\n    this.eventInput.emit(this.inputForm);\n  }\n\n  getFormChanges() {\n    this.inputForm.valueChanges.subscribe(() => {\n      this.eventInput.emit(this.inputForm);\n    });\n  }\n\n  eventValue(event: any) {\n    this.eventInput.emit({ alias: this.configInput.alias, type: 'searchForm', value: event });\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'lib-group-fields',\n  templateUrl: './group-fields.component.html',\n  styleUrls: ['./group-fields.component.css']\n})\nexport class GroupFieldsComponent implements OnInit {\n  @Input() configGroup: any;\n  @Output() eventGroupInput = new EventEmitter();\n  fieldsGroup: any = {};\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  eventFields(event: any) {\n    if (event.type === 'searchForm') {\n      this.fieldsGroup[event.alias] = {value: event.value, isValid: event.valid };\n      this.eventGroupInput.emit(this.fieldsGroup);\n    } else {\n      this.fieldsGroup[Object.keys(event.value)[0] || Object.keys(event)[0]] = [ event.value, event.valid, event ]\n      this.eventGroupInput.emit(this.fieldsGroup)\n    }\n  }\n\n}\n","import {\n    Component, OnInit, Input,\n    ViewEncapsulation,\n    Output, EventEmitter,\n    ViewChild, ElementRef, ChangeDetectionStrategy, OnChanges, SimpleChanges\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatAutocompleteTrigger } from '@angular/material/autocomplete';\n\n@Component({\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'app-inputsearch',\n    templateUrl: './inputsearch.component.html',\n    styleUrls: ['./inputsearch.component.scss'],\n    encapsulation: ViewEncapsulation.ShadowDom\n})\nexport class InputsearchComponent implements OnInit, OnChanges {\n    @ViewChild('selectInp') nameField: ElementRef;\n    @ViewChild(MatAutocompleteTrigger, { static: true }) autoTrigger: MatAutocompleteTrigger;\n    @Input() allData: any = [];\n    @Input() searchDefault: any;\n    @Input() preSelected = '';\n    @Input() preSelectedComparer: any;\n    @Input() label: string;\n    @Input() itemValue: any;\n    @Input() itemResult: any;\n    @Output() sendValue = new EventEmitter();\n    @Output() sendKeyEvent = new EventEmitter();\n    @Input() validate: boolean;\n    @Input() readOnly: boolean;\n    focusField = false;\n    myControl = new FormControl();\n    filteredOptions: Observable<string[]>;\n    allComplete = [];\n    globalTrigger: any;\n    callNumber = 0;\n    callOne = 0;\n    valuSelectedInit: string;\n    constructor() {\n\n    }\n\n    ngOnInit(): void {\n        this.allComplete = this.allData || [];\n        this.allComplete.map((res: any) => {\n            const str = res[this.itemResult].toLowerCase();\n            if (res[this.preSelectedComparer] === this.preSelected) {\n                this.myControl.setValue(str.toUpperCase());\n                this.filter(this.preSelected);\n                return;\n            }\n        });\n\n        this.myControl.valueChanges.subscribe(value => {\n            if (this.globalTrigger) {\n                this.globalTrigger.openPanel();\n            }\n            if (value === '') {\n                this.sendValue.emit({ id: '', name: this.label });\n            }\n            if (value === '' && this.callNumber === 0) {\n                this.allComplete = this.allData;\n                this.callNumber = 1;\n            }\n            this.filter(value);\n        });\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.allComplete = changes.allData.currentValue;\n    }\n\n    onKey(event: any) {\n        this.sendKeyEvent.emit({eventSent: event, field: this.myControl});\n    }\n\n    private filter(value: string) {\n        const filterValue = typeof value === 'string' ? value.toLowerCase() : value;\n        const newResult: any = [];\n        this.allData.map((option: any) => {\n            const result = typeof option[this.itemResult] === 'string' ?\n                option[this.itemResult].toLowerCase() : option[this.itemResult];\n            if (result.includes(filterValue)) {\n                this.valuSelectedInit = option.id;\n                newResult.push(option);\n            }\n        });\n        if (newResult.length > 1 && this.callNumber === 0) {\n            setTimeout(() => {\n                this.autoTrigger.openPanel();\n            }, 200);\n            this.callNumber = 1;\n        } else {\n            if (this.label === 'Delivery Address' && this.callOne === 0) {\n                this.selected(this.valuSelectedInit, this.label);\n                this.callOne = 1;\n            }\n        }\n        this.allComplete = newResult;\n\n\n    }\n\n    eventClick($event: any, trigger: any) {\n        this.globalTrigger = trigger;\n        trigger.openPanel();\n    }\n\n    selected(id: any, label: string) {\n        if (!id) {\n            return;\n        }\n        this.sendValue.emit({ id: id, name: this.label });\n    }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularEasyFormComponent } from './angular-easy-form.component';\nimport { InputComponent } from './fields/input/input.component';\nimport { GroupFieldsComponent } from './groupFields/group-fields/group-fields.component';\nimport {MatInputModule} from '@angular/material/input';\nimport { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {TextFieldModule} from '@angular/cdk/text-field';\nimport { InputsearchComponent } from './inputsearch/inputsearch.component';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatSelectModule} from '@angular/material/select';\n@NgModule({\n  declarations: [\n    AngularEasyFormComponent,\n     InputComponent, \n     GroupFieldsComponent,\n     InputsearchComponent],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    TextFieldModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatAutocompleteModule,\n    MatSelectModule,\n    MatFormFieldModule\n    \n  ],\n  exports: [AngularEasyFormComponent]\n})\nexport class AngularEasyFormModule { }\n","/*\n * Public API Surface of angular-easy-form\n */\nexport * from './lib/angular-easy-form.component';\nexport * from './lib/angular-easy-form.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {InputComponent as ɵa} from './lib/fields/input/input.component';\nexport {GroupFieldsComponent as ɵb} from './lib/groupFields/group-fields/group-fields.component';\nexport {InputsearchComponent as ɵc} from './lib/inputsearch/inputsearch.component';"]}